{
  "openapi": "3.0.3",
  "info": {
    "title": "Philanthropy Data Commons API",
    "description": "An API for a common data platform to make the process of submitting data requests to funders less burdensome for organizations seeking grants.",
    "version": "0.1.0"
  },
  "components": {
    "securitySchemes": {
      "preSharedApiKey": {
        "type": "apiKey",
        "description": "A pre-shared key required to create or access protected resources via the API.",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "schemas": {
      "Applicant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3407
          },
          "externalId": {
            "type": "string",
            "example": "111-11-1111"
          },
          "optedIn": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "externalId",
          "optedIn",
          "createdAt"
        ]
      },
      "Proposal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3709
          },
          "applicantId": {
            "type": "integer",
            "example": 3407
          },
          "opportunityId": {
            "type": "integer",
            "example": 3203
          },
          "externalId": {
            "type": "string",
            "example": "AnIdGeneratedByAGms"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProposalVersion"
            },
            "readOnly": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "applicantId",
          "opportunityId",
          "externalId",
          "createdAt"
        ]
      },
      "ProposalVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3821
          },
          "proposalId": {
            "type": "integer",
            "example": 3709
          },
          "applicationFormId": {
            "type": "integer",
            "example": 3529
          },
          "version": {
            "type": "integer",
            "example": 17,
            "readOnly": true
          },
          "fieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProposalFieldValue"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "proposalId",
          "version",
          "createdAt"
        ]
      },
      "ProposalFieldValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3943
          },
          "proposalVersionId": {
            "type": "integer",
            "readOnly": true,
            "example": 3709
          },
          "applicationFormFieldId": {
            "type": "integer",
            "example": 3613
          },
          "position": {
            "type": "integer",
            "example": 23
          },
          "value": {
            "type": "string",
            "example": "Some arbitrary value"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "proposalVersionId",
          "applicationFormFieldId",
          "position",
          "value",
          "createdAt"
        ]
      },
      "ApplicationForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3529
          },
          "opportunityId": {
            "type": "integer",
            "example": 3203
          },
          "version": {
            "type": "integer",
            "readOnly": true,
            "example": 13
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationFormField"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "opportunityId",
          "version",
          "createdAt"
        ]
      },
      "ApplicationFormField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3613
          },
          "applicationFormId": {
            "type": "integer",
            "readOnly": true,
            "example": 3529
          },
          "canonicalFieldId": {
            "type": "integer",
            "example": 3011
          },
          "position": {
            "type": "integer",
            "example": 19
          },
          "label": {
            "type": "string",
            "example": "Your First Name"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "applicationFormId",
          "canonicalFieldId",
          "position",
          "label",
          "createdAt"
        ]
      },
      "CanonicalField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3011
          },
          "label": {
            "type": "string",
            "example": "First Name"
          },
          "shortCode": {
            "type": "string",
            "example": "firstName"
          },
          "dataType": {
            "type": "string",
            "example": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "label",
          "shortCode",
          "dataType",
          "createdAt"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": []
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 3203
          },
          "title": {
            "type": "string",
            "example": "The Open Source Foundation 2022 Challenge"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "title",
          "createdAt"
        ]
      }
    }
  },
  "paths": {
    "/applicants": {
      "get": {
        "summary": "Get a list of applicants.",
        "tags": [
          "Applicants"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "All applicants currently registered in the PDC.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Applicant"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new applicant.",
        "tags": [
          "Applicants"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Applicant"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new applicant that was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Applicant"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applicants/{externalId}": {
      "get": {
        "summary": "Get a specific applicant, including all known field values associated with the applicant. (In Development)",
        "tags": [
          "Applicants"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "parameters": [
          {
            "name": "externalId",
            "description": "The external identifier of an applicant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The populated applicant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Applicant"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applicationForms": {
      "get": {
        "summary": "Get a list of application forms.",
        "tags": [
          "Application Forms"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "All application forms currently registered in the PDC.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationForm"
                  }
                },
                "example": [
                  {
                    "id": 3529,
                    "opportunityId": 3203,
                    "version": 13,
                    "createdAt": "2022-09-13T14:45:06.139Z"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new application form.",
        "tags": [
          "Application Forms"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new application form that was created, with populated fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationForm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "There was a unique key or foreign key conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/proposals": {
      "get": {
        "summary": "Get a list of proposals.",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "All proposals currently registered in the PDC.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Proposal"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new proposal.",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Proposal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new proposal that was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposal"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "There was a unique key or foreign key conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/proposals/{proposalId}": {
      "get": {
        "summary": "Get a specific proposal.",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "parameters": [
          {
            "name": "proposalId",
            "description": "The PDC-generated ID of a proposal.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The proposal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposal"
                },
                "example": {
                  "id": 3709,
                  "applicantId": 3407,
                  "externalId": "AnIdGeneratedByAGms",
                  "opportunityId": 3203,
                  "createdAt": "2022-12-30T15:50:58.839Z"
                }
              }
            }
          }
        }
      }
    },
    "/proposalVersions": {
      "post": {
        "summary": "Add a new proposal version.",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProposalVersion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new proposal version that was created, with populated field values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalVersion"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "There was a foreign key conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/canonicalFields": {
      "get": {
        "summary": "Get a list of canonical fields.",
        "tags": [
          "Canonical Fields"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "All canonical fields currently registered in the PDC.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CanonicalField"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new canonical field.",
        "tags": [
          "Canonical Fields"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CanonicalField"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new canonical field that was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanonicalField"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "There was a unique key conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities": {
      "get": {
        "summary": "Get a list of opportunities.",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of known funding opportunities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Opportunity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new opportunity. (In Development)",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Opportunity"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new opportunity that was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "401": {
            "description": "Authentication was not provided or was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/opportunities/{opportunityId}": {
      "get": {
        "summary": "Get a specific opportunity.",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "preSharedApiKey": []
          }
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "description": "The PDC-generated ID of an opportunity, RFC, potential award or grant, etc.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The funding opportunity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    }
  }
}
